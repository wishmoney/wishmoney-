{
  "file": "multiply/zawy-difficulty-algorithm.json",
  "description": "Add Zawy difficulty algorithm option in multiply (https://github.com/monero-project/research-lab/issues/3)",
  "required": [
    "core/bytecoin.json",
    "zawy-difficulty-algorithm.json",
    "multiply.json",
    "get-blockchain-settings.json"
  ],
  "files": [
    {
      "path": "/src/Daemon/Daemon.cpp",
      "changes": [
        {
          "action": "add_below",
          "marker": "const command_line::arg_descriptor< std::vector<std::string> > arg_CHECKPOINT",
          "parameters": {
            "text": [
              "  const command_line::arg_descriptor<uint32_t>    arg_ZAWY_DIFFICULTY_BLOCK_INDEX  = {\"ZAWY_DIFFICULTY_BLOCK_INDEX\", \"uint32_t\", 0};",
              "  const command_line::arg_descriptor<uint32_t>    arg_ZAWY_DIFFICULTY_LAST_BLOCK  = {\"ZAWY_DIFFICULTY_LAST_BLOCK\", \"uint32_t\", 0};",
              "  const command_line::arg_descriptor<uint64_t>    arg_ZAWY_DIFFICULTY_MIN  = {\"ZAWY_DIFFICULTY_MIN\", \"uint64_t\", 1};"
            ]
          }
        },
        {
          "action": "add_below",
          "marker": "command_line::add_arg(desc_cmd_sett, arg_CHECKPOINT);",
          "parameters": {
            "text": [
              "    command_line::add_arg(desc_cmd_sett, arg_ZAWY_DIFFICULTY_BLOCK_INDEX);",
              "    command_line::add_arg(desc_cmd_sett, arg_ZAWY_DIFFICULTY_LAST_BLOCK);",
              "    command_line::add_arg(desc_cmd_sett, arg_ZAWY_DIFFICULTY_MIN);"
            ]
          }
        },
        {
          "action": "add_above",
          "marker": "currencyBuilder.testnet(testnet_mode);",
          "parameters": {
            "text": [
              "    currencyBuilder.zawyDifficultyBlockIndex(command_line::get_arg(vm, arg_ZAWY_DIFFICULTY_BLOCK_INDEX));",
              "    currencyBuilder.zawyDifficultyLastBlock(command_line::get_arg(vm, arg_ZAWY_DIFFICULTY_LAST_BLOCK));",
              "    currencyBuilder.zawyDifficultyMin(command_line::get_arg(vm, arg_ZAWY_DIFFICULTY_MIN));"
            ]
          }
        }
      ]
    },
    {
      "path": "/src/PaymentGateService/CoinBaseConfiguration.h",
      "changes": [
        {
          "action": "add_below",
          "marker": "uint64_t MONEY_SUPPLY;",
          "parameters": {
            "text": [
              "  uint32_t ZAWY_DIFFICULTY_BLOCK_INDEX;",
              "  uint32_t ZAWY_DIFFICULTY_LAST_BLOCK;",
              "  uint64_t ZAWY_DIFFICULTY_MIN;"
            ]
          }
        }
      ]
    },
    {
      "path": "/src/PaymentGateService/CoinBaseConfiguration.cpp",
      "changes": [
        {
          "action": "add_below",
          "marker": "MONEY_SUPPLY=CryptoNote::parameters::MONEY_SUPPLY;",
          "parameters": {
            "text": [
              "    ZAWY_DIFFICULTY_BLOCK_INDEX=CryptoNote::parameters::ZAWY_DIFFICULTY_BLOCK_INDEX;",
              "    ZAWY_DIFFICULTY_LAST_BLOCK=CryptoNote::parameters::ZAWY_DIFFICULTY_LAST_BLOCK;",
              "    ZAWY_DIFFICULTY_MIN=CryptoNote::parameters::ZAWY_DIFFICULTY_MIN;"
            ]
          }
        },
        {
          "action": "add_below",
          "marker": "(\"MONEY_SUPPLY\", po::value<uint64_t>()->default_value(CryptoNote::parameters::MONEY_SUPPLY), \"uint64_t\")",
          "parameters": {
            "text": [
              "    (\"ZAWY_DIFFICULTY_BLOCK_INDEX\", po::value<uint32_t>()->default_value(0), \"uint32_t\")",
              "    (\"ZAWY_DIFFICULTY_LAST_BLOCK\", po::value<uint32_t>()->default_value(0), \"uint32_t\")",
              "    (\"ZAWY_DIFFICULTY_MIN\", po::value<uint64_t>()->default_value(0), \"uint64_t\")"
            ]
          }
        },
        {
          "action": "add_above",
          "marker": "if (options.count(\"EMISSION_SPEED_FACTOR\")) {",
          "parameters": {
            "text": [
              "  if (options.count(\"ZAWY_DIFFICULTY_BLOCK_INDEX\")) {",
              "    ZAWY_DIFFICULTY_BLOCK_INDEX = options[\"ZAWY_DIFFICULTY_BLOCK_INDEX\"].as<uint32_t>();",
              "  }",
              "  if (options.count(\"ZAWY_DIFFICULTY_LAST_BLOCK\")) {",
              "    ZAWY_DIFFICULTY_LAST_BLOCK = options[\"ZAWY_DIFFICULTY_LAST_BLOCK\"].as<uint32_t>();",
              "  }",
              "  if (options.count(\"ZAWY_DIFFICULTY_MIN\")) {",
              "    ZAWY_DIFFICULTY_MIN = options[\"ZAWY_DIFFICULTY_MIN\"].as<uint64_t>();",
              "  }"
            ]
          }
        }
      ]
    },
    {
      "path": "/src/PaymentGateService/PaymentGateService.cpp",
      "changes": [
        {
          "action": "add_below",
          "marker": "currencyBuilder.moneySupply(config.coinBaseConfig.MONEY_SUPPLY);",
          "parameters": {
            "text": [
              "  currencyBuilder.zawyDifficultyBlockIndex(config.coinBaseConfig.ZAWY_DIFFICULTY_BLOCK_INDEX);",
              "  currencyBuilder.zawyDifficultyLastBlock(config.coinBaseConfig.ZAWY_DIFFICULTY_LAST_BLOCK);",
              "  currencyBuilder.zawyDifficultyMin(config.coinBaseConfig.ZAWY_DIFFICULTY_MIN);"
            ]
          }
        }
      ]
    },

    {
      "path": "/src/Rpc/CoreRpcServerCommandsDefinitions.h",
      "description": "Changes for get-blockchain-settings.json",
      "changes": [
        {
          "action": "add_above",
          "marker": "std::string BYTECOIN_NETWORK;",
          "parameters": {
            "text": [
              "  uint32_t ZAWY_DIFFICULTY_BLOCK_INDEX;",
              "  uint32_t ZAWY_DIFFICULTY_LAST_BLOCK;",
              "  uint64_t ZAWY_DIFFICULTY_MIN;"
            ]
          }
        },
        {
          "action": "add_above",
          "marker": "KV_MEMBER(BYTECOIN_NETWORK)",
          "parameters": {
            "text": [
              "    KV_MEMBER(ZAWY_DIFFICULTY_BLOCK_INDEX)",
              "    KV_MEMBER(ZAWY_DIFFICULTY_LAST_BLOCK)",
              "    KV_MEMBER(ZAWY_DIFFICULTY_MIN)"
            ]
          }
        }
      ]
    },
    {
      "path": "/src/Rpc/RpcServer.cpp",
      "description": "Changes for get-blockchain-settings.json",
      "changes": [
        {
          "action": "add_above",
          "marker": "res.core.CRYPTONOTE_NAME = m_core.getCurrency().cryptonoteName();",
          "parameters": {
            "text": [
              "  if (m_core.getCurrency().zawyDifficultyBlockIndex() != 0 ) {",
              "    res.extensions.push_back(\"zawy-difficulty-algorithm.json\");",
              "  }"
            ]
          }
        },
        {
          "action": "add_above",
          "marker": "res.core.P2P_DEFAULT_PORT = m_p2p.get_this_peer_port();",
          "parameters": {
            "text": [
              "  res.core.ZAWY_DIFFICULTY_BLOCK_INDEX = m_core.getCurrency().zawyDifficultyBlockIndex();",
              "  res.core.ZAWY_DIFFICULTY_LAST_BLOCK = m_core.getCurrency().zawyDifficultyLastBlock();",
              "  res.core.ZAWY_DIFFICULTY_MIN = m_core.getCurrency().zawyDifficultyMin();"
            ]
          }
        }
      ]
    }
  ]
}
